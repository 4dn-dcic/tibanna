Sending build context to Docker daemon  20.99kB
Step 1/27 : FROM ubuntu:20.04
 ---> d70eaf7277ea
Step 2/27 : MAINTAINER Soo Lee (duplexa@gmail.com)
 ---> Using cache
 ---> fa7ca9873b97
Step 3/27 : ENV DEBIAN_FRONTEND=noninteractive
 ---> Using cache
 ---> 7336fb896104
Step 4/27 : ENV TZ=Etc/UTC
 ---> Using cache
 ---> 0aaba87f5278
Step 5/27 : RUN apt update -y && apt upgrade -y &&  apt install -y     apt-transport-https     bzip2     ca-certificates     cron     curl     fuse     gcc     g++     git     less     locales     make     python3     python3-pip     time     unzip     vim     wget     software-properties-common     build-essential     libssl-dev     libwww-perl     libdatetime-perl     uuid-dev     libgpgme11-dev     squashfs-tools     libseccomp-dev     pkg-config     openjdk-8-jre-headless
 ---> Using cache
 ---> 5e19bc78ed9d
Step 6/27 : RUN ln -s /usr/bin/python3.8 /usr/bin/python
 ---> Using cache
 ---> 9be0047b7ba6
Step 7/27 : RUN ln -s /usr/bin/pip3 /usr/bin/pip
 ---> Using cache
 ---> 422535465714
Step 8/27 : WORKDIR /usr/local/bin
 ---> Using cache
 ---> c5607c6bcfc4
Step 9/27 : RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -     && apt-key fingerprint 0EBFCD88     && add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
 ---> Using cache
 ---> 23aa16b793a5
Step 10/27 : RUN apt-get update -y     && apt-cache policy docker-ce     && apt-get install -y docker-ce
 ---> Using cache
 ---> 3fcf57ce1df8
Step 11/27 : RUN wget https://golang.org/dl/go1.15.3.linux-amd64.tar.gz &&     tar -xzf go1.15.3.linux-amd64.tar.gz &&     rm go1.15.3.linux-amd64.tar.gz
 ---> Using cache
 ---> aab8d888e2f1
Step 12/27 : RUN export SINGULARITY_VERSION=3.3.0 &&     export PATH=/usr/local/bin/go/bin/:$PATH &&     wget https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-${SINGULARITY_VERSION}.tar.gz &&     tar -xzf singularity-${SINGULARITY_VERSION}.tar.gz &&     rm singularity-${SINGULARITY_VERSION}.tar.gz &&     cd singularity &&     ./mconfig &&     make -C ./builddir &&     make -C ./builddir install &&     cd .. &&     rm -rf go &&     mv singularity/singularity singularity2 &&     rm -rf singularity &&     mv singularity2 singularity
 ---> Using cache
 ---> 79f0b47b27a7
Step 13/27 : RUN curl -O -L http://bit.ly/goofys-latest && chmod +x goofys-latest
 ---> Using cache
 ---> e83a92fffca4
Step 14/27 : RUN pip install boto3==1.15 awscli==1.18.152 botocore==1.18.11
 ---> Using cache
 ---> 76b8fd777f2f
Step 15/27 : RUN pip install psutil==5.7.3
 ---> Using cache
 ---> 8afc0b1485f2
Step 16/27 : RUN pip install schema-salad==7.0.20200811075006 cwltool==3.0.20201017180608
 ---> Using cache
 ---> e5130e1213f2
Step 17/27 : RUN pip install ec2metadata==2.0.1
 ---> Using cache
 ---> c798f7d7d637
Step 18/27 : RUN wget https://github.com/broadinstitute/cromwell/releases/download/53.1/cromwell-53.1.jar &&     ln -s cromwell-53.1.jar cromwell.jar
 ---> Using cache
 ---> e0c212df7e04
Step 19/27 : COPY run.sh .
 ---> Using cache
 ---> b740b69c5867
Step 20/27 : COPY cron.sh .
 ---> Using cache
 ---> 1eb993ba8888
Step 21/27 : RUN chmod +x run.sh cron.sh
 ---> Using cache
 ---> 3966bec4b89e
Step 22/27 : ARG version
 ---> Using cache
 ---> 067070e180d4
Step 23/27 : RUN pip install tibanna==$version
 ---> Using cache
 ---> 5045a2328d43
Step 24/27 : COPY daemon.json /etc/docker/daemon.json
 ---> Using cache
 ---> f60902d7be7e
Step 25/27 : RUN locale-gen "en_US.UTF-8" && update-locale LC_ALL="en_US.UTF-8"
 ---> Using cache
 ---> afa6408e54db
Step 26/27 : ENV LC_ALL=en_US.UTF-8
 ---> Using cache
 ---> e961e59bdc72
Step 27/27 : CMD ["bash"]
 ---> Using cache
 ---> 39d59c498de2
Successfully built 39d59c498de2
Successfully tagged duplexa/tibanna-awsf:pre
